{
  "swagger": "2.0",
  "info": {
    "title": "Node Simulator",
    "version": "1.0.0"
  },
  "schemes": [
    "http",
    "https"
  ],
  "basePath": "/api/v1",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "description": "Node Simulator 1.0 API",
      "name": "/api/v1"
    }
  ],
  "paths": {
      "/nodes": {
          "get": {
              "summary": "Get all nodes",
              "description": "",
              "operationId": "getAllNodes",
              "parameters": [
              ],
              "tags": [
                  "Nodes"
              ],
              "responses": {
                  "200": {
                      "description": "",
                      "schema": {
                          "items": {
                              "$ref": "#/definitions/Node"
                          },
                          "type": "array"
                      }
                  },
                  "default": {
                      "description": "Error",
                      "schema": {
                          "$ref": "#/definitions/Error"
                      }
                  }
              }
          },
          "x-swagger-router-controller": "nodes"
      },
      "/nodes/{nodeId}": {
          "delete": {
              "summary": "Delete node by nodeId",
              "description": "",
              "operationId": "deleteNodeById",
              "parameters": [
                  {
                      "description": "",
                      "in": "path",
                      "name": "nodeId",
                      "required": true,
                      "type": "string"
                  }
              ],
              "tags": [
                  "Nodes"
              ],
              "responses": {
                  "200": {
                      "description": "",
                      "schema": {
                          "$ref": "#/definitions/Node"
                      }
                  },
                  "404": {
                      "description": "Node not found",
                      "schema": {
                          "$ref": "#/definitions/Error"
                      }
                  },
                  "default": {
                      "description": "Error",
                      "schema": {
                          "$ref": "#/definitions/Error"
                      }
                  }
              }
          },
          "x-swagger-router-controller": "nodes"
      },
      "/nodegroups": {
          "get": {
              "summary": "Get all groups of nodes",
              "description": "",
              "operationId": "getAllNodegroups",
              "parameters": [
              ],
              "tags": [
                  "Nodegroups"
              ],
              "responses": {
                  "200": {
                      "description": "",
                      "schema": {
                          "items": {
                              "$ref": "#/definitions/NodeGroup"
                          },
                          "type": "array"
                      }
                  },
                  "default": {
                      "description": "Error",
                      "schema": {
                          "$ref": "#/definitions/Error"
                      }
                  }
              }
          },
          "post": {
              "summary": "Create a group of nodes",
              "description": "",
              "operationId": "postNodegroup",
              "parameters": [
                  {
                      "description": "",
                      "in": "query",
                      "name": "count",
                      "required": true,
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 2000
                  }
              ],
              "tags": [
                  "Nodegroups"
              ],
              "responses": {
                  "200": {
                      "description": "",
                      "schema": {
                          "$ref": "#/definitions/NodeGroup"
                      }
                  },
                  "400": {
                      "description": "Invalid count, which should between 1 and 2000; No IP or MAC address available",
                      "schema": {
                          "$ref": "#/definitions/Error"
                      }
                  },
                  "default": {
                      "description": "Error",
                      "schema": {
                          "$ref": "#/definitions/Error"
                      }
                  }
              }
          },
          "x-swagger-router-controller": "nodegroups"
      },
      "/nodegroups/{nodegroupId}": {
          "get": {
              "summary": "Get a group of nodes by nodegroupId",
              "description": "",
              "operationId": "getNodegroupById",
              "parameters": [
                  {
                      "description": "",
                      "in": "path",
                      "name": "nodegroupId",
                      "required": true,
                      "type": "string"
                  }
              ],
              "tags": [
                  "Nodegroups"
              ],
              "responses": {
                  "200": {
                      "description": "",
                      "schema": {
                          "$ref": "#/definitions/NodeGroup"
                      }
                  },
                  "default": {
                      "description": "Error",
                      "schema": {
                          "$ref": "#/definitions/Error"
                      }
                  }
              }
          },
          "delete": {
              "summary": "Delete a group of nodes by nodegroupId",
              "description": "",
              "operationId": "deleteNodegroupById",
              "parameters": [
                  {
                      "description": "",
                      "in": "path",
                      "name": "nodegroupId",
                      "required": true,
                      "type": "string"
                  }
              ],
              "tags": [
                  "Nodegroups"
              ],
              "responses": {
                  "200": {
                      "description": "",
                      "schema": {
                          "$ref": "#/definitions/NodeGroup"
                      }
                  },
                  "404": {
                      "description": "Nodegroup not found",
                      "schema": {
                          "$ref": "#/definitions/Error"
                      }
                  },
                  "default": {
                      "description": "Error",
                      "schema": {
                          "$ref": "#/definitions/Error"
                      }
                  }
              }
          },
          "x-swagger-router-controller": "nodegroups"
      },
      "/nodegroups/{nodegroupId}/tasks/{taskName}": {
          "post": {
              "summary": "Run task on a group of nodes by nodegroupId",
              "description": "",
              "operationId": "postTaskByNodegroupId",
              "parameters": [
                  {
                      "description": "",
                      "in": "path",
                      "name": "nodegroupId",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "description": "",
                      "in": "path",
                      "name": "taskName",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "description": "",
                      "in": "body",
                      "name": "body",
                      "required": false,
                      "schema": {
                          "$ref": "#/definitions/TaskParams"
                      }
                  }
              ],
              "tags": [
                  "Nodegroups"
              ],
              "responses": {
                  "200": {
                      "description": "",
                      "schema": {
                          "$ref": "#/definitions/TaskResponse"
                      }
                  },
                  "404": {
                      "description": "Task not found; Nodes not found under nodegroup",
                      "schema": {
                          "$ref": "#/definitions/Error"
                      }
                  },
                  "default": {
                      "description": "Error",
                      "schema": {
                          "$ref": "#/definitions/Error"
                      }
                  }
              }
          },
          "x-swagger-router-controller": "nodegroups"
      },
      "/results/tasks/{taskId}": {
          "get": {
              "summary": "Get task result by taskId",
              "description": "",
              "operationId": "getTaskResultById",
              "parameters": [
                  {
                      "description": "",
                      "in": "path",
                      "name": "taskId",
                      "required": true,
                      "type": "string"
                  }
              ],
              "tags": [
                  "Results"
              ],
              "responses": {
                  "200": {
                      "description": "",
                      "schema": {
                          "items": {
                              "$ref": "#/definitions/TaskResult"
                          }
                      }
                  },
                  "default": {
                      "description": "Error",
                      "schema": {
                          "$ref": "#/definitions/Error"
                      }
                  }
              }
          },
          "x-swagger-router-controller": "tasks"
      },
      "/results/taskrunners/{taskrunnerId}": {
          "get": {
              "summary": "Get taskrunner result by taskrunnerId",
              "description": "",
              "operationId": "getTaskrunnerResultById",
              "parameters": [
                  {
                      "description": "",
                      "in": "path",
                      "name": "taskrunnerId",
                      "required": true,
                      "type": "string"
                  }
              ],
              "tags": [
                  "Results"
              ],
              "responses": {
                  "200": {
                      "description": "",
                      "schema": {
                          "items": {
                              "$ref": "#/definitions/TaskRunner"
                          }
                      }
                  },
                  "default": {
                      "description": "Error",
                      "schema": {
                          "$ref": "#/definitions/Error"
                      }
                  }
              }
          },
          "x-swagger-router-controller": "tasks"
      },
      "/results/jobs/{jobId}": {
          "get": {
              "summary": "Get job result by jobId",
              "description": "",
              "operationId": "getJobResultById",
              "parameters": [
                  {
                      "description": "",
                      "in": "path",
                      "name": "jobId",
                      "required": true,
                      "type": "string"
                  }
              ],
              "tags": [
                  "Results"
              ],
              "responses": {
                  "200": {
                      "description": "",
                      "schema": {
                          "items": {
                              "$ref": "#/definitions/Job"
                          }
                      }
                  },
                  "default": {
                      "description": "Error",
                      "schema": {
                          "$ref": "#/definitions/Error"
                      }
                  }
              }
          },
          "x-swagger-router-controller": "tasks"
      }
  },
  "definitions": {
      "NodeGroup": {
          "properties": {
              "nodegroupId": {
                  "type": "string"
              },
              "nodes": {
                  "items": {
                      "$ref": "#/definitions/Node"
                  },
                  "type": "array"
              }
          },
          "required": [
              "nodegroupId",
              "nodes"
          ]
      },
      "Node": {
          "properties": {
              "nodegroup": {
                  "type": "string"
              },
              "ip": {
                  "type": "string"
              },
              "mac": {
                  "type": "string"
              },
              "nodeId": {
                  "type": "string"
              }
          },
          "required": [
              "nodegroup",
              "ip",
              "mac",
              "nodeId"
          ]
      },
      "TaskParams": {
          "properties": {
              "startDelay": {
                  "type": "integer"
              },
              "delay": {
                  "type": "integer"
              }
          }
      },
      "TaskResponse": {
          "properties": {
              "taskId": {
                  "type": "string"
              },
              "taskName": {
                  "type": "string"
              },
              "nodegroupId": {
                  "type": "string"
              }
          },
          "required": [
              "taskId",
              "taskName",
              "nodegroupId"
          ]
      },
      "TaskResult": {
          "properties": {
              "taskId": {
                  "type": "string"
              },
              "taskName": {
                  "type": "string"
              },
              "nodegroupId": {
                  "type": "string"
              },
              "taskrunners": {
                  "items": {
                      "$ref": "#/definitions/TaskRunner"
                  },
                  "type": "array"
              }
          },
          "required": [
              "taskId",
              "taskName",
              "nodegroupId",
              "taskrunners"
          ]
      },
      "TaskRunner": {
          "properties": {
              "taskrunnerId": {
                  "type": "string"
              },
              "task": {
                  "type": "string"
              },
              "nodeId": {
                  "type": "string"
              },
              "status": {
                  "type": "string"
              },
              "description": {
                  "type": "string"
              },
              "jobs": {
                  "items": {
                      "$ref": "#/definitions/Job"
                  },
                  "type": "array"
              }
          },
          "required": [
              "taskrunnerId",
              "task",
              "nodeId",
              "status",
              "description",
              "jobs"
          ]
      },
      "Job": {
          "properties": {
              "jobId": {
                  "type": "string"
              },
              "taskrunner": {
                  "type": "string"
              },
              "executeTime": {
                  "type": "string"
              },
              "status": {
                  "type": "string"
              },
              "description": {
                  "type": "string"
              }
          },
          "required": [
              "jobId",
              "taskrunner",
              "status",
              "description"
          ]
      },
      "Success": {
          "properties": {
              "message": {
                  "type": "string"
              }
          },
          "required": [
              "message"
          ]
      },
      "Error": {
          "properties": {
              "message": {
                  "type": "string"
              },
              "status": {
                  "type": "integer"
              }
          },
          "required": [
              "message",
              "status"
          ]
      }
  }
}
